<?xml version="1.0" encoding="UTF-8"?>
<XMI verified="false" xmi.version="1.2" timestamp="2016-05-03T12:15:43" xmlns:UML="http://schema.omg.org/spec/UML/1.3">
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://umbrello.kde.org</XMI.exporter>
   <XMI.exporterVersion>1.6.4</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.version="1.3" href="UML.xml" xmi.name="UML"/>
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isAbstract="false" isLeaf="false" xmi.id="m1" isRoot="false" name="ModÃ¨le UML">
   <UML:Namespace.ownedElement>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="folder" name="folder"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="datatype" name="datatype"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="constructor" name="constructor"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="friend" name="friend"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="virtual" name="virtual"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="interface" name="interface"/>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Logical View" name="Logical View">
     <UML:Namespace.ownedElement>
      <UML:Package stereotype="folder" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Datatypes" name="Datatypes">
       <UML:Namespace.ownedElement>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4wXKKQFvHh0X" name="int"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="o6g7ieDur8JU" name="char"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="xO4PGryIoVc6" name="bool"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="up1BV2hH6LOm" name="float"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="zZgrhyJcKLzY" name="double"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="DxqzRR5LE4Uj" name="short"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="4ByAWKuUtZJY" name="long"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Xc9px8M84A5T" name="unsigned int"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Z8ooDIVHSUQw" name="unsigned short"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oKQgthEOHNCF" name="unsigned long"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UYLWgPzGXn4i" name="string"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="5W3SO2Ouq22G" isRoot="false" xmi.id="XgqH8sHH8LmB" name="Vector&lt;AbstractMenu>"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="5W3SO2Ouq22G" isRoot="false" xmi.id="tOK0b3Hf2nsK" name="Vector&lt;AbstractToolbar*>"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="5W3SO2Ouq22G" isRoot="false" xmi.id="JMaj1olHRIUl" name="Vector&lt;AbstractMenu*>"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="oQQ57r2VmbBV" isRoot="false" xmi.id="fsfvXFnq9OBd" name="QVector&lt;AbstractDrawPicture>"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="oQQ57r2VmbBV" isRoot="false" xmi.id="gycV5fS4nrlU" name="QVector&lt;AbstractDrawPicture*>"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="oQQ57r2VmbBV" isRoot="false" xmi.id="4CIzqp8ow66D" name="QVector&lt;AbstractMenu*>"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="oQQ57r2VmbBV" isRoot="false" xmi.id="gxbsGepOlcXA" name="QVector&lt;AbstractToolbar*>"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="jDMpz4su6qwS" isRoot="false" xmi.id="pG6kZs6Yq1fV" name="QMenuBar*"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="LDPmZnkxqrAz" isRoot="false" xmi.id="jfR4j8tahdP8" name="QGraphicsView*"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="96bzvjwdOMh5" isRoot="false" xmi.id="Uae9B3Fphs4v" name="QGridLayout*"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" elementReference="kOV7kAACioLt" isRoot="false" xmi.id="rbgWRjRAjwz7" name="QGraphicsScene *"/>
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Interface stereotype="interface" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="true" isLeaf="false" isRoot="false" xmi.id="3XyTzOQmgoSY" name="AbstractALLApplication"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="hxZCibvj8rD6" name="MyWindow">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="V9PSJyRjBg8D"/>
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="BG5V465ztFZ1" type="4CIzqp8ow66D" name="menuList"/>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="DGMOXwwrtP0q" type="gxbsGepOlcXA" name="toolBarList"/>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="JvbNUsBoRv26" type="gycV5fS4nrlU" name="drawPictureList"/>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="10v7fMFJoZR1" type="pG6kZs6Yq1fV" name="menuBar"/>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="YlUhZ3j6m4oL" type="4wXKKQFvHh0X" name="w_win"/>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="NUYGSqtxxrLQ" type="4wXKKQFvHh0X" name="h_win"/>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="6YRoAhuhTOO0" type="4wXKKQFvHh0X" name="x_win"/>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="Q56C9sXUM3ip" type="4wXKKQFvHh0X" name="y_win"/>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="tZkqQ5FWbeIk" type="jfR4j8tahdP8" name="viewGraphic"/>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="gecFGvzb6OMd" type="Uae9B3Fphs4v" name="layoutGrid"/>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Abstraction visibility="public" isSpecification="false" namespace="Logical View" supplier="3XyTzOQmgoSY" xmi.id="u3kpNNhpy2uu" client="hxZCibvj8rD6" name=""/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JA5HC0BWGg2W" name="AbstractDrawPicture">
       <UML:Classifier.feature>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="l2WpOqSWx1Ts" type="rbgWRjRAjwz7" name="sceneGraphic"/>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Y8MP4pfNzifB" name="AbstractMenu"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SkFKQ81wGLLJ" name="AbstractToolbar"/>
      <UML:Abstraction visibility="public" isSpecification="false" namespace="Logical View" supplier="3XyTzOQmgoSY" xmi.id="elyoUHWu0kEO" client="JA5HC0BWGg2W" name=""/>
      <UML:Abstraction visibility="public" isSpecification="false" namespace="Logical View" supplier="3XyTzOQmgoSY" xmi.id="Ex3EhFcXSve1" client="SkFKQ81wGLLJ" name=""/>
      <UML:Abstraction visibility="public" isSpecification="false" namespace="Logical View" supplier="3XyTzOQmgoSY" xmi.id="wrvPlXQHY8Oe" client="Y8MP4pfNzifB" name=""/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="KDkOMwmmk6AB" name="MyDraw">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="Ha7KXTRODvGy"/>
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="3Zzq3tNN46jO" name="MyPicture">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="tNOEUVyY5xO8"/>
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="3Zzq3tNN46jO" xmi.id="tNOEUVyY5xO8" parent="JA5HC0BWGg2W" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="KDkOMwmmk6AB" xmi.id="Ha7KXTRODvGy" parent="JA5HC0BWGg2W" name=""/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="SAXd5obBLLzJ" name="MyMenu">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="QZ4kGvCze3OI"/>
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ljrPgaa6k6jp" name="MyToolbar">
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="SPB5RZN4UkQW"/>
       </UML:GeneralizableElement.generalization>
      </UML:Class>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="SAXd5obBLLzJ" xmi.id="QZ4kGvCze3OI" parent="Y8MP4pfNzifB" name=""/>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="ljrPgaa6k6jp" xmi.id="SPB5RZN4UkQW" parent="SkFKQ81wGLLJ" name=""/>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="afh4P5YCdzKJ" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="false" isSpecification="false" xmi.id="UR3ceqmK9Pwx" type="JA5HC0BWGg2W" name="" aggregation="none"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="DlBQkT5K8kMV" type="hxZCibvj8rD6" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="pufSszjKPmu3" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="false" isSpecification="false" xmi.id="dgLm3FhEzqfj" type="hxZCibvj8rD6" name="" aggregation="none"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="Hi3NSNqHFUh5" type="JA5HC0BWGg2W" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="RRQqDKrqzCa0" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="false" isSpecification="false" xmi.id="SFFP4s8Ja9h2" type="hxZCibvj8rD6" name="" aggregation="none"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="WXHj1ypTPDHb" type="Y8MP4pfNzifB" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Generalization discriminator="" visibility="public" isSpecification="false" namespace="Logical View" child="hxZCibvj8rD6" xmi.id="V9PSJyRjBg8D" parent="SkFKQ81wGLLJ" name=""/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bwZnciy8yVCM" name="Model"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jnqGRL62Hfnt" name="Model2"/>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="gWosoMeV9UlY" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="false" isSpecification="false" xmi.id="ppZ6TKxo6u6K" type="3Zzq3tNN46jO" name="" aggregation="none"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="1iHOYfKCB82z" type="jnqGRL62Hfnt" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="SeUc8EAv3jzW" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="false" isSpecification="false" xmi.id="4uJ8mNQl4h7c" type="KDkOMwmmk6AB" name="" aggregation="none"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="KRmVYmS0RvaX" type="bwZnciy8yVCM" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="9jTAQQfSJyb3" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="JzpNhwz1MjVu" type="JA5HC0BWGg2W" name="" aggregation="aggregate"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="WxsxqTUxCv8c" type="hxZCibvj8rD6" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="Kl5dheg0bVOI" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="QLIm3neZiWWZ" type="SkFKQ81wGLLJ" name="" aggregation="aggregate"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="xyU7uaiCLlp0" type="hxZCibvj8rD6" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="NV1yzNHNgZ9j" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="KnI2HmZDl4Kd" type="Y8MP4pfNzifB" name="" aggregation="aggregate"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="e0pylcy65x52" type="hxZCibvj8rD6" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="KKP1rYkBJ3BZ" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="nlkYn29P3wNm" type="hxZCibvj8rD6" name="" aggregation="aggregate"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="YMtcHyecG4d7" type="JA5HC0BWGg2W" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="aLIsORRACBix" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="DqNEkk1H4utM" type="hxZCibvj8rD6" name="" aggregation="aggregate"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="qXy6ZZBAuR2H" type="Y8MP4pfNzifB" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="sRR5a72lvP0g" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="8zxAtoWhLSlv" type="hxZCibvj8rD6" name="" aggregation="aggregate"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="zw3sN57FUWI4" type="SkFKQ81wGLLJ" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="bJpXgpBom6zd" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="uTKDu36tz9jK" type="hxZCibvj8rD6" name="" aggregation="composite"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="EqaiMqky9aTq" type="JA5HC0BWGg2W" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="NccAgZna16lv" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="9so71WREMzuj" type="hxZCibvj8rD6" name="" aggregation="composite"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="qffxF6laiOiO" type="Y8MP4pfNzifB" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="vWwwahrjZeqb" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="AInUHhB5Mq3Z" type="hxZCibvj8rD6" name="" aggregation="composite"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="umAa8sy4Msyw" type="SkFKQ81wGLLJ" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5W3SO2Ouq22G" name="Vector"/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="Y8MP4pfNzifB" xmi.id="PrAI4hIADJaa" client="hxZCibvj8rD6" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="SkFKQ81wGLLJ" xmi.id="6D2Ej0QwGnIn" client="hxZCibvj8rD6" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="u3kpNNhpy2uu" xmi.id="5FuJ0D4gQhE4" client="hxZCibvj8rD6" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="Y8MP4pfNzifB" xmi.id="KGo5BaNBRGQN" client="hxZCibvj8rD6" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="u3kpNNhpy2uu" xmi.id="hRJ7hjUdIpU0" client="hxZCibvj8rD6" name=""/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oQQ57r2VmbBV" name="QVector"/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="JA5HC0BWGg2W" xmi.id="EKPdGRj2r75w" client="hxZCibvj8rD6" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="JA5HC0BWGg2W" xmi.id="Uzoxq4xu7l8W" client="hxZCibvj8rD6" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="u3kpNNhpy2uu" xmi.id="w2q4nyYWveX8" client="hxZCibvj8rD6" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="Y8MP4pfNzifB" xmi.id="RjLZo5L2uHNZ" client="hxZCibvj8rD6" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="u3kpNNhpy2uu" xmi.id="iLEaaZ9pCJ4y" client="hxZCibvj8rD6" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="SkFKQ81wGLLJ" xmi.id="BXke8N9QI37s" client="hxZCibvj8rD6" name=""/>
      <UML:Dependency visibility="public" isSpecification="false" namespace="Logical View" supplier="u3kpNNhpy2uu" xmi.id="9y3RzAIuAO3H" client="hxZCibvj8rD6" name=""/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jDMpz4su6qwS" name="QMenuBar"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LDPmZnkxqrAz" name="QGraphicsView"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="96bzvjwdOMh5" name="QGridLayout"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kOV7kAACioLt" name="QGraphicsScene"/>
      <UML:Interface stereotype="interface" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="true" isLeaf="false" isRoot="false" xmi.id="Rvnpg6II1DFm" name="AbstractLayer"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mR4N8s4eWtcU" name="Layer"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="otTFzWouU7wF" name="CompositeLayer"/>
      <UML:Interface stereotype="interface" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="true" isLeaf="false" isRoot="false" xmi.id="wnx9di2WWnY9" name="AbstractOperation"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="RrpInRDMtj6D" name="OperationA"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="fNptufdwNwwD" name="OperationB"/>
      <UML:Abstraction visibility="public" isSpecification="false" namespace="Logical View" supplier="Rvnpg6II1DFm" xmi.id="0PWzCL5evwtN" client="otTFzWouU7wF" name=""/>
      <UML:Abstraction visibility="public" isSpecification="false" namespace="Logical View" supplier="Rvnpg6II1DFm" xmi.id="MYHppBmdMKm2" client="mR4N8s4eWtcU" name=""/>
      <UML:Abstraction visibility="public" isSpecification="false" namespace="Logical View" supplier="wnx9di2WWnY9" xmi.id="ikNmocdKPYTV" client="RrpInRDMtj6D" name=""/>
      <UML:Abstraction visibility="public" isSpecification="false" namespace="Logical View" supplier="wnx9di2WWnY9" xmi.id="EDA53GkovA48" client="fNptufdwNwwD" name=""/>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="SrOX1c3NjkmT" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="6caVIGWWNkAd" type="SAXd5obBLLzJ" name="" aggregation="aggregate"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="9nRUX9jzcQGA" type="wnx9di2WWnY9" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="aeEUhM2Edk6O" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="NiLTRk4QAhQk" type="ljrPgaa6k6jp" name="" aggregation="aggregate"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="GHeD6UOG1AdV" type="wnx9di2WWnY9" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="MxZIrc8AMEIb" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="t0n4z4q5NrPB" type="mR4N8s4eWtcU" name="" aggregation="aggregate"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="wYRyXjigxTld" type="wnx9di2WWnY9" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="Hbo3FVHc3uWv" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="KvmBXhW44HeD" type="KDkOMwmmk6AB" name="" aggregation="composite"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="m9JOtb0DF87U" type="Rvnpg6II1DFm" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="IEa4jV9GF1CQ" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="L7iLB6NvBOwO" type="otTFzWouU7wF" name="" aggregation="composite"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="1dwEZQ7ZEssq" type="Rvnpg6II1DFm" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Abstraction visibility="public" isSpecification="false" namespace="Logical View" supplier="Rvnpg6II1DFm" xmi.id="EolQqjF7txmE" client="otTFzWouU7wF" name=""/>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="kzMqHVGW7DUt" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="wUNYaR6BnQPv" type="SAXd5obBLLzJ" name="" aggregation="aggregate"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="GVYxoKJJ0Qg1" type="wnx9di2WWnY9" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="S8wq0sSOwu9a" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="RcCe7M7qcWJY" type="ljrPgaa6k6jp" name="" aggregation="aggregate"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="4f4imjBa30DT" type="wnx9di2WWnY9" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
     </UML:Namespace.ownedElement>
     <XMI.extension xmi.extender="umbrello">
      <diagrams>
       <diagram showopsig="1" linecolor="#ff0000" snapx="25" showattribassocs="1" snapy="25" linewidth="0" showattsig="1" textcolor="#000000" isopen="1" showpackage="1" showpubliconly="0" showstereotype="1" name="Diagramme de classes" font="Sans Serif,9,-1,0,50,0,0,0,0,0" canvasheight="404" canvaswidth="826" localid="-1" snapcsgrid="0" showgrid="0" showops="1" griddotcolor="#d3d3d3" backgroundcolor="#ffffff" usefillcolor="1" fillcolor="#ffff00" zoom="100" xmi.id="EFxPcp7aRtpb" documentation="" showscope="1" snapgrid="0" showatts="1" type="1">
        <widgets>
         <interfacewidget linecolor="none" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="0" showpackage="0" x="216" showstereotype="1" y="-734" font="Sans Serif,9,-1,0,75,1,0,0,0,0" drawascircle="0" localid="Wewl08ySeKyL" width="169" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="3XyTzOQmgoSY" showscope="1" height="42" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="1" showpackage="1" x="205" showattsigs="601" showstereotype="1" y="-646" showattributes="1" font="Sans Serif,9,-1,5,75,0,0,0,0,0" localid="DdstPIRtwMfu" width="85" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="hxZCibvj8rD6" showscope="1" height="33" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="1" showpackage="1" x="16" showattsigs="601" showstereotype="1" y="-691" showattributes="1" font="Sans Serif,9,-1,5,75,0,0,0,0,0" localid="xUHvajRXuguh" width="152" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="JA5HC0BWGg2W" showscope="1" height="28" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="1" showpackage="1" x="325" showattsigs="601" showstereotype="1" y="-635" showattributes="1" font="Sans Serif,9,-1,0,75,0,0,0,0,0" localid="gofxSiTQAkLk" width="105" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="Y8MP4pfNzifB" showscope="1" height="28" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="1" showpackage="1" x="521" showattsigs="601" showstereotype="1" y="-700" showattributes="1" font="Sans Serif,9,-1,0,75,0,0,0,0,0" localid="Ayg9hJIN8yKY" width="118" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="SkFKQ81wGLLJ" showscope="1" height="28" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="1" showpackage="1" x="-3" showattsigs="601" showstereotype="1" y="-625" showattributes="1" font="Sans Serif,9,-1,0,75,0,0,0,0,0" localid="bGGBal4IN97m" width="66" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="KDkOMwmmk6AB" showscope="1" height="29" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="1" showpackage="1" x="343" showattsigs="601" showstereotype="1" y="-554" showattributes="1" font="Sans Serif,9,-1,0,75,0,0,0,0,0" localid="Z1z9SyEdLhsS" width="67" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="SAXd5obBLLzJ" showscope="1" height="29" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="1" showpackage="1" x="529" showattsigs="601" showstereotype="1" y="-610" showattributes="1" font="Sans Serif,9,-1,0,75,0,0,0,0,0" localid="uI0DcxUBzUKR" width="81" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="ljrPgaa6k6jp" showscope="1" height="29" showopsigs="601"/>
         <interfacewidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="0" showpackage="0" x="-14" showstereotype="1" y="-547" font="Sans Serif,9,-1,0,75,1,0,0,0,0" drawascircle="0" localid="9JzjGdRfXANB" width="108" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="Rvnpg6II1DFm" showscope="1" height="42" showopsigs="601"/>
         <classwidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="0" showpackage="1" x="115" showattsigs="601" showstereotype="1" y="-469" showattributes="1" font="Sans Serif,9,-1,0,75,0,0,0,0,0" localid="nq7Qct2A1hmJ" width="49" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="mR4N8s4eWtcU" showscope="1" height="29" showopsigs="601"/>
         <classwidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="0" showpackage="1" x="-187" showattsigs="601" showstereotype="1" y="-470" showattributes="1" font="Sans Serif,9,-1,0,75,0,0,0,0,0" localid="po7wDenagHPh" width="121" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="otTFzWouU7wF" showscope="1" height="29" showopsigs="601"/>
         <interfacewidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="0" showpackage="0" x="321" showstereotype="1" y="-471" font="Sans Serif,9,-1,0,75,1,0,0,0,0" drawascircle="0" localid="QdRIhCERUKRd" width="136" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="wnx9di2WWnY9" showscope="1" height="42" showopsigs="601"/>
         <classwidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="0" showpackage="1" x="222" showattsigs="601" showstereotype="1" y="-362" showattributes="1" font="Sans Serif,9,-1,0,75,0,0,0,0,0" localid="ims8QIA6ZyCV" width="89" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="RrpInRDMtj6D" showscope="1" height="29" showopsigs="601"/>
         <classwidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="0" showpackage="1" x="468" showattsigs="601" showstereotype="1" y="-359" showattributes="1" font="Sans Serif,9,-1,0,75,0,0,0,0,0" localid="K5kGtJo8f5LT" width="88" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="fNptufdwNwwD" showscope="1" height="29" showopsigs="601"/>
        </widgets>
        <messages/>
        <associations>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="1" widgetaid="hxZCibvj8rD6" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="u3kpNNhpy2uu" widgetbid="3XyTzOQmgoSY" totalcountb="2" type="511" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,9,-1,0,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="256" starty="-646"/>
           <endpoint endx="256" endy="-692"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="JA5HC0BWGg2W" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="elyoUHWu0kEO" widgetbid="3XyTzOQmgoSY" totalcountb="2" type="511" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,9,-1,0,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="168" starty="-691"/>
           <endpoint endx="216" endy="-692"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="1" widgetaid="SkFKQ81wGLLJ" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="Ex3EhFcXSve1" widgetbid="3XyTzOQmgoSY" totalcountb="2" type="511" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,9,-1,0,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="521" starty="-699"/>
           <endpoint endx="385" endy="-699"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="1" widgetaid="Y8MP4pfNzifB" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="wrvPlXQHY8Oe" widgetbid="3XyTzOQmgoSY" totalcountb="2" type="511" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,9,-1,0,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="360" starty="-635"/>
           <endpoint endx="360" endy="-692"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="KDkOMwmmk6AB" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="Ha7KXTRODvGy" widgetbid="JA5HC0BWGg2W" totalcountb="2" type="500" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,9,-1,0,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="33" starty="-625"/>
           <endpoint endx="33" endy="-663"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="SAXd5obBLLzJ" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="QZ4kGvCze3OI" widgetbid="Y8MP4pfNzifB" totalcountb="2" type="500" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,9,-1,0,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="388" starty="-554"/>
           <endpoint endx="388" endy="-607"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="1" widgetaid="ljrPgaa6k6jp" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="SPB5RZN4UkQW" widgetbid="SkFKQ81wGLLJ" totalcountb="2" type="500" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,9,-1,0,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="570" starty="-610"/>
           <endpoint endx="570" endy="-672"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="hxZCibvj8rD6" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="bJpXgpBom6zd" widgetbid="JA5HC0BWGg2W" totalcountb="2" type="510" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,9,-1,0,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="205" starty="-646"/>
           <endpoint endx="168" endy="-663"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="hxZCibvj8rD6" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="NccAgZna16lv" widgetbid="Y8MP4pfNzifB" totalcountb="2" type="510" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,9,-1,0,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="290" starty="-635"/>
           <endpoint endx="325" endy="-635"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="hxZCibvj8rD6" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="none" seqnum="" totalcounta="2" xmi.id="vWwwahrjZeqb" widgetbid="SkFKQ81wGLLJ" totalcountb="2" type="510" textcolor="none" usefillcolor="1" linewidth="none" font="Sans Serif,9,-1,0,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="290" starty="-646"/>
           <endpoint endx="521" endy="-672"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="mR4N8s4eWtcU" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="#ff0000" seqnum="" totalcounta="2" xmi.id="MYHppBmdMKm2" widgetbid="Rvnpg6II1DFm" totalcountb="2" type="511" textcolor="none" usefillcolor="1" linewidth="0" font="Sans Serif,9,-1,0,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="115" starty="-469"/>
           <endpoint endx="94" endy="-505"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="RrpInRDMtj6D" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="#ff0000" seqnum="" totalcounta="2" xmi.id="ikNmocdKPYTV" widgetbid="wnx9di2WWnY9" totalcountb="2" type="511" textcolor="none" usefillcolor="1" linewidth="0" font="Sans Serif,9,-1,0,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="311" starty="-362"/>
           <endpoint endx="321" endy="-429"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="fNptufdwNwwD" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="#ff0000" seqnum="" totalcounta="2" xmi.id="EDA53GkovA48" widgetbid="wnx9di2WWnY9" totalcountb="2" type="511" textcolor="none" usefillcolor="1" linewidth="0" font="Sans Serif,9,-1,0,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="468" starty="-359"/>
           <endpoint endx="457" endy="-429"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="KDkOMwmmk6AB" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="#ff0000" seqnum="" totalcounta="2" xmi.id="Hbo3FVHc3uWv" widgetbid="Rvnpg6II1DFm" totalcountb="2" type="510" textcolor="none" usefillcolor="1" linewidth="0" font="Sans Serif,9,-1,0,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="33" starty="-596"/>
           <endpoint endx="33" endy="-547"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="otTFzWouU7wF" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="#ff0000" seqnum="" totalcounta="2" xmi.id="EolQqjF7txmE" widgetbid="Rvnpg6II1DFm" totalcountb="2" type="511" textcolor="none" usefillcolor="1" linewidth="0" font="Sans Serif,9,-1,0,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="-66" starty="-470"/>
           <endpoint endx="-14" endy="-505"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="SAXd5obBLLzJ" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="#ff0000" seqnum="" totalcounta="2" xmi.id="kzMqHVGW7DUt" widgetbid="wnx9di2WWnY9" totalcountb="2" type="501" textcolor="none" usefillcolor="1" linewidth="0" font="Sans Serif,9,-1,0,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="379" starty="-525"/>
           <endpoint endx="379" endy="-471"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="ljrPgaa6k6jp" usesdiagramfillcolor="0" fillcolor="#ffff00" linecolor="#ff0000" seqnum="" totalcounta="2" xmi.id="S8wq0sSOwu9a" widgetbid="wnx9di2WWnY9" totalcountb="2" type="501" textcolor="none" usefillcolor="1" linewidth="0" font="Sans Serif,9,-1,0,50,0,0,0,0,0">
          <linepath layout="Polyline">
           <startpoint startx="529" starty="-581"/>
           <endpoint endx="457" endy="-471"/>
          </linepath>
         </assocwidget>
        </associations>
       </diagram>
      </diagrams>
     </XMI.extension>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Use Case View" name="Use Case View">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Component View" name="Component View">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Deployment View" name="Deployment View">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Entity Relationship Model" name="Entity Relationship Model">
     <UML:Namespace.ownedElement/>
    </UML:Model>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello">
  <docsettings viewid="EFxPcp7aRtpb" uniqueid="4f4imjBa30DT" documentation=""/>
  <listview>
   <listitem open="1" type="800" id="Views">
    <listitem open="1" type="836" id="Entity Relationship Model"/>
    <listitem open="1" type="802" id="Use Case View"/>
    <listitem open="1" type="821" id="Component View"/>
    <listitem open="1" type="827" id="Deployment View"/>
    <listitem open="1" type="801" id="Logical View">
     <listitem open="1" type="817" id="3XyTzOQmgoSY"/>
     <listitem open="1" type="813" id="JA5HC0BWGg2W">
      <listitem open="0" type="814" id="l2WpOqSWx1Ts"/>
     </listitem>
     <listitem open="1" type="817" id="Rvnpg6II1DFm"/>
     <listitem open="1" type="813" id="Y8MP4pfNzifB"/>
     <listitem open="1" type="817" id="wnx9di2WWnY9"/>
     <listitem open="1" type="813" id="SkFKQ81wGLLJ"/>
     <listitem open="1" type="813" id="otTFzWouU7wF"/>
     <listitem open="0" type="807" id="EFxPcp7aRtpb" label="Diagramme de classes"/>
     <listitem open="1" type="813" id="mR4N8s4eWtcU"/>
     <listitem open="1" type="813" id="bwZnciy8yVCM"/>
     <listitem open="1" type="813" id="jnqGRL62Hfnt"/>
     <listitem open="1" type="813" id="KDkOMwmmk6AB"/>
     <listitem open="1" type="813" id="SAXd5obBLLzJ"/>
     <listitem open="1" type="813" id="3Zzq3tNN46jO"/>
     <listitem open="1" type="813" id="ljrPgaa6k6jp"/>
     <listitem open="1" type="813" id="hxZCibvj8rD6">
      <listitem open="0" type="814" id="JvbNUsBoRv26"/>
      <listitem open="0" type="814" id="NUYGSqtxxrLQ"/>
      <listitem open="0" type="814" id="gecFGvzb6OMd"/>
      <listitem open="0" type="814" id="10v7fMFJoZR1"/>
      <listitem open="0" type="814" id="BG5V465ztFZ1"/>
      <listitem open="0" type="814" id="DGMOXwwrtP0q"/>
      <listitem open="0" type="814" id="tZkqQ5FWbeIk"/>
      <listitem open="0" type="814" id="YlUhZ3j6m4oL"/>
      <listitem open="0" type="814" id="6YRoAhuhTOO0"/>
      <listitem open="0" type="814" id="Q56C9sXUM3ip"/>
     </listitem>
     <listitem open="1" type="813" id="RrpInRDMtj6D"/>
     <listitem open="1" type="813" id="fNptufdwNwwD"/>
     <listitem open="1" type="813" id="kOV7kAACioLt"/>
     <listitem open="1" type="813" id="LDPmZnkxqrAz"/>
     <listitem open="1" type="813" id="96bzvjwdOMh5"/>
     <listitem open="1" type="813" id="jDMpz4su6qwS"/>
     <listitem open="1" type="813" id="oQQ57r2VmbBV"/>
     <listitem open="0" type="830" id="Datatypes">
      <listitem open="1" type="829" id="xO4PGryIoVc6"/>
      <listitem open="1" type="829" id="o6g7ieDur8JU"/>
      <listitem open="1" type="829" id="zZgrhyJcKLzY"/>
      <listitem open="1" type="829" id="up1BV2hH6LOm"/>
      <listitem open="1" type="829" id="4wXKKQFvHh0X"/>
      <listitem open="1" type="829" id="4ByAWKuUtZJY"/>
      <listitem open="1" type="829" id="rbgWRjRAjwz7"/>
      <listitem open="1" type="829" id="jfR4j8tahdP8"/>
      <listitem open="1" type="829" id="Uae9B3Fphs4v"/>
      <listitem open="1" type="829" id="pG6kZs6Yq1fV"/>
      <listitem open="1" type="829" id="gycV5fS4nrlU"/>
      <listitem open="1" type="829" id="fsfvXFnq9OBd"/>
      <listitem open="1" type="829" id="4CIzqp8ow66D"/>
      <listitem open="1" type="829" id="gxbsGepOlcXA"/>
      <listitem open="1" type="829" id="DxqzRR5LE4Uj"/>
      <listitem open="1" type="829" id="UYLWgPzGXn4i"/>
      <listitem open="1" type="829" id="Xc9px8M84A5T"/>
      <listitem open="1" type="829" id="oKQgthEOHNCF"/>
      <listitem open="1" type="829" id="Z8ooDIVHSUQw"/>
      <listitem open="1" type="829" id="JMaj1olHRIUl"/>
      <listitem open="1" type="829" id="XgqH8sHH8LmB"/>
      <listitem open="1" type="829" id="tOK0b3Hf2nsK"/>
     </listitem>
     <listitem open="1" type="813" id="5W3SO2Ouq22G"/>
    </listitem>
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="C++">
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="3XyTzOQmgoSY" id="3XyTzOQmgoSY" fileName="AbstractALLApplication" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;abstractallapplication.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="hxZCibvj8rD6" id="hxZCibvj8rD6" fileName="MyWindow" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;mywindow.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="BG5V465ztFZ1" writeOutText="false" classfield_id="BG5V465ztFZ1" text="return menuList;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="BG5V465ztFZ1" writeOutText="false" classfield_id="BG5V465ztFZ1" text="menuList = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="DGMOXwwrtP0q" writeOutText="false" classfield_id="DGMOXwwrtP0q" text="return toolBarList;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="DGMOXwwrtP0q" writeOutText="false" classfield_id="DGMOXwwrtP0q" text="toolBarList = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="JvbNUsBoRv26" writeOutText="false" classfield_id="JvbNUsBoRv26" text="return drawPictureList;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="JvbNUsBoRv26" writeOutText="false" classfield_id="JvbNUsBoRv26" text="drawPictureList = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="10v7fMFJoZR1" writeOutText="false" classfield_id="10v7fMFJoZR1" text="return menuBar;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="10v7fMFJoZR1" writeOutText="false" classfield_id="10v7fMFJoZR1" text="menuBar = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="YlUhZ3j6m4oL" writeOutText="false" classfield_id="YlUhZ3j6m4oL" text="return w_win;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="YlUhZ3j6m4oL" writeOutText="false" classfield_id="YlUhZ3j6m4oL" text="w_win = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="NUYGSqtxxrLQ" writeOutText="false" classfield_id="NUYGSqtxxrLQ" text="return h_win;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="NUYGSqtxxrLQ" writeOutText="false" classfield_id="NUYGSqtxxrLQ" text="h_win = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="6YRoAhuhTOO0" writeOutText="false" classfield_id="6YRoAhuhTOO0" text="return x_win;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="6YRoAhuhTOO0" writeOutText="false" classfield_id="6YRoAhuhTOO0" text="x_win = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="Q56C9sXUM3ip" writeOutText="false" classfield_id="Q56C9sXUM3ip" text="return y_win;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="Q56C9sXUM3ip" writeOutText="false" classfield_id="Q56C9sXUM3ip" text="y_win = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="tZkqQ5FWbeIk" writeOutText="false" classfield_id="tZkqQ5FWbeIk" text="return viewGraphic;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="tZkqQ5FWbeIk" writeOutText="false" classfield_id="tZkqQ5FWbeIk" text="viewGraphic = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="gecFGvzb6OMd" writeOutText="false" classfield_id="gecFGvzb6OMd" text="return layoutGrid;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="gecFGvzb6OMd" writeOutText="false" classfield_id="gecFGvzb6OMd" text="layoutGrid = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_20" accessType="0" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_21" accessType="1" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_22" accessType="2" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_23" accessType="3" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractDrawPicture item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractDrawPicture>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_24" accessType="4" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_25" accessType="0" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_26" accessType="1" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_27" accessType="2" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_28" accessType="3" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_29" accessType="4" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_30" accessType="0" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_31" accessType="1" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_32" accessType="2" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_33" accessType="3" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_34" accessType="4" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_35" accessType="0" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_36" accessType="1" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_37" accessType="2" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_38" accessType="3" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractDrawPicture item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractDrawPicture>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_39" accessType="4" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_40" accessType="0" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_41" accessType="1" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_42" accessType="2" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_43" accessType="3" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_44" accessType="4" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_45" accessType="0" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_46" accessType="1" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_47" accessType="2" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_48" accessType="3" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_49" accessType="4" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_50" accessType="0" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_51" accessType="1" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_52" accessType="2" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_53" accessType="3" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractDrawPicture item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractDrawPicture>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_54" accessType="4" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_55" accessType="0" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_56" accessType="1" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_57" accessType="2" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_58" accessType="3" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_59" accessType="4" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_60" accessType="0" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_61" accessType="1" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_62" accessType="2" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_63" accessType="3" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_64" accessType="4" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="BG5V465ztFZ1" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="BG5V465ztFZ1" indentLevel="1" text="private QVector&lt;AbstractMenu*> menuList;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="BG5V465ztFZ1" writeOutText="false" classfield_id="BG5V465ztFZ1" text="return menuList;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="BG5V465ztFZ1" writeOutText="false" classfield_id="BG5V465ztFZ1" text="menuList = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="DGMOXwwrtP0q" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="DGMOXwwrtP0q" indentLevel="1" text="private QVector&lt;AbstractToolbar*> toolBarList;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_2" accessType="0" parent_id="DGMOXwwrtP0q" writeOutText="false" classfield_id="DGMOXwwrtP0q" text="return toolBarList;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="DGMOXwwrtP0q" writeOutText="false" classfield_id="DGMOXwwrtP0q" text="toolBarList = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="JvbNUsBoRv26" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="JvbNUsBoRv26" indentLevel="1" text="private QVector&lt;AbstractDrawPicture*> drawPictureList;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_4" accessType="0" parent_id="JvbNUsBoRv26" writeOutText="false" classfield_id="JvbNUsBoRv26" text="return drawPictureList;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_5" accessType="1" parent_id="JvbNUsBoRv26" writeOutText="false" classfield_id="JvbNUsBoRv26" text="drawPictureList = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="10v7fMFJoZR1" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="10v7fMFJoZR1" indentLevel="1" text="private QMenuBar* menuBar;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_6" accessType="0" parent_id="10v7fMFJoZR1" writeOutText="false" classfield_id="10v7fMFJoZR1" text="return menuBar;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_7" accessType="1" parent_id="10v7fMFJoZR1" writeOutText="false" classfield_id="10v7fMFJoZR1" text="menuBar = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="YlUhZ3j6m4oL" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="YlUhZ3j6m4oL" indentLevel="1" text="private int w_win;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_8" accessType="0" parent_id="YlUhZ3j6m4oL" writeOutText="false" classfield_id="YlUhZ3j6m4oL" text="return w_win;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_9" accessType="1" parent_id="YlUhZ3j6m4oL" writeOutText="false" classfield_id="YlUhZ3j6m4oL" text="w_win = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="NUYGSqtxxrLQ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="NUYGSqtxxrLQ" indentLevel="1" text="private int h_win;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_10" accessType="0" parent_id="NUYGSqtxxrLQ" writeOutText="false" classfield_id="NUYGSqtxxrLQ" text="return h_win;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_11" accessType="1" parent_id="NUYGSqtxxrLQ" writeOutText="false" classfield_id="NUYGSqtxxrLQ" text="h_win = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="6YRoAhuhTOO0" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="6YRoAhuhTOO0" indentLevel="1" text="private int x_win;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_12" accessType="0" parent_id="6YRoAhuhTOO0" writeOutText="false" classfield_id="6YRoAhuhTOO0" text="return x_win;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_13" accessType="1" parent_id="6YRoAhuhTOO0" writeOutText="false" classfield_id="6YRoAhuhTOO0" text="x_win = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Q56C9sXUM3ip" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="Q56C9sXUM3ip" indentLevel="1" text="private int y_win;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_14" accessType="0" parent_id="Q56C9sXUM3ip" writeOutText="false" classfield_id="Q56C9sXUM3ip" text="return y_win;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_15" accessType="1" parent_id="Q56C9sXUM3ip" writeOutText="false" classfield_id="Q56C9sXUM3ip" text="y_win = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="tZkqQ5FWbeIk" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="tZkqQ5FWbeIk" indentLevel="1" text="private QGraphicsView* viewGraphic;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_16" accessType="0" parent_id="tZkqQ5FWbeIk" writeOutText="false" classfield_id="tZkqQ5FWbeIk" text="return viewGraphic;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_17" accessType="1" parent_id="tZkqQ5FWbeIk" writeOutText="false" classfield_id="tZkqQ5FWbeIk" text="viewGraphic = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="gecFGvzb6OMd" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="gecFGvzb6OMd" indentLevel="1" text="private QGridLayout* layoutGrid;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_18" accessType="0" parent_id="gecFGvzb6OMd" writeOutText="false" classfield_id="gecFGvzb6OMd" text="return layoutGrid;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_19" accessType="1" parent_id="gecFGvzb6OMd" writeOutText="false" classfield_id="gecFGvzb6OMd" text="layoutGrid = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="9jTAQQfSJyb3" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" text="public AbstractDrawPicture ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_20" accessType="0" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_21" accessType="1" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_22" accessType="2" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_23" accessType="3" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractDrawPicture item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractDrawPicture>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_24" accessType="4" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="Kl5dheg0bVOI" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" text="public AbstractToolbar ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_25" accessType="0" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_26" accessType="1" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_27" accessType="2" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_28" accessType="3" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_29" accessType="4" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="NV1yzNHNgZ9j" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" text="public AbstractMenu ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_30" accessType="0" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_31" accessType="1" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_32" accessType="2" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_33" accessType="3" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_34" accessType="4" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="KKP1rYkBJ3BZ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" text="public AbstractDrawPicture ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_35" accessType="0" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_36" accessType="1" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_37" accessType="2" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_38" accessType="3" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractDrawPicture item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractDrawPicture>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_39" accessType="4" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="aLIsORRACBix" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" text="public AbstractMenu ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_40" accessType="0" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_41" accessType="1" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_42" accessType="2" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_43" accessType="3" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_44" accessType="4" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="sRR5a72lvP0g" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" text="public AbstractToolbar ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_45" accessType="0" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_46" accessType="1" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_47" accessType="2" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_48" accessType="3" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_49" accessType="4" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="bJpXgpBom6zd" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" text="public AbstractDrawPicture ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_50" accessType="0" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_51" accessType="1" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_52" accessType="2" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_53" accessType="3" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractDrawPicture item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractDrawPicture>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_54" accessType="4" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="NccAgZna16lv" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" text="public AbstractMenu ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_55" accessType="0" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_56" accessType="1" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_57" accessType="2" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_58" accessType="3" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_59" accessType="4" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="vWwwahrjZeqb" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" text="public AbstractToolbar ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_60" accessType="0" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_61" accessType="1" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_62" accessType="2" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_63" accessType="3" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_64" accessType="4" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="JA5HC0BWGg2W" id="JA5HC0BWGg2W" fileName="AbstractDrawPicture" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;abstractdrawpicture.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="l2WpOqSWx1Ts" writeOutText="false" classfield_id="l2WpOqSWx1Ts" text="return sceneGraphic;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="l2WpOqSWx1Ts" writeOutText="false" classfield_id="l2WpOqSWx1Ts" text="sceneGraphic = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="0" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="1" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="2" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="3" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="4" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="0" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="1" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="2" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="3" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_11" accessType="4" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_12" accessType="0" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_13" accessType="1" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_14" accessType="2" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_15" accessType="3" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_16" accessType="4" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="l2WpOqSWx1Ts" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="" parent_id="l2WpOqSWx1Ts" indentLevel="1" text="private QGraphicsScene * sceneGraphic;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="l2WpOqSWx1Ts" writeOutText="false" classfield_id="l2WpOqSWx1Ts" text="return sceneGraphic;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_1" accessType="1" parent_id="l2WpOqSWx1Ts" writeOutText="false" classfield_id="l2WpOqSWx1Ts" text="sceneGraphic = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="9jTAQQfSJyb3" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" text="public MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="0" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="1" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="2" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="3" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="4" parent_id="9jTAQQfSJyb3" writeOutText="false" classfield_id="9jTAQQfSJyb3" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="KKP1rYkBJ3BZ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" text="public MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="0" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="1" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="2" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="3" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_11" accessType="4" parent_id="KKP1rYkBJ3BZ" writeOutText="false" classfield_id="KKP1rYkBJ3BZ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="bJpXgpBom6zd" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" text="public MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_12" accessType="0" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_13" accessType="1" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_14" accessType="2" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_15" accessType="3" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_16" accessType="4" parent_id="bJpXgpBom6zd" writeOutText="false" classfield_id="bJpXgpBom6zd" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="Y8MP4pfNzifB" id="Y8MP4pfNzifB" fileName="AbstractMenu" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;abstractmenu.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_5" accessType="0" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="1" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="2" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="3" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="4" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="0" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_11" accessType="1" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_12" accessType="2" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_13" accessType="3" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_14" accessType="4" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="NV1yzNHNgZ9j" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" text="public MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="NV1yzNHNgZ9j" writeOutText="false" classfield_id="NV1yzNHNgZ9j" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="aLIsORRACBix" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" text="public MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_5" accessType="0" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="1" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="2" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="3" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="4" parent_id="aLIsORRACBix" writeOutText="false" classfield_id="aLIsORRACBix" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="NccAgZna16lv" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" text="public MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="0" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_11" accessType="1" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_12" accessType="2" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_13" accessType="3" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_14" accessType="4" parent_id="NccAgZna16lv" writeOutText="false" classfield_id="NccAgZna16lv" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="SkFKQ81wGLLJ" id="SkFKQ81wGLLJ" fileName="AbstractToolbar" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;abstracttoolbar.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_5" accessType="0" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="1" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="2" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="3" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="4" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="0" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_11" accessType="1" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_12" accessType="2" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_13" accessType="3" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_14" accessType="4" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="Kl5dheg0bVOI" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" text="public MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="Kl5dheg0bVOI" writeOutText="false" classfield_id="Kl5dheg0bVOI" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="sRR5a72lvP0g" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" text="public MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_5" accessType="0" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="1" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="2" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="3" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="4" parent_id="sRR5a72lvP0g" writeOutText="false" classfield_id="sRR5a72lvP0g" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="vWwwahrjZeqb" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" text="public MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="0" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_11" accessType="1" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_12" accessType="2" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_13" accessType="3" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_14" accessType="4" parent_id="vWwwahrjZeqb" writeOutText="false" classfield_id="vWwwahrjZeqb" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="KDkOMwmmk6AB" id="KDkOMwmmk6AB" fileName="MyDraw" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;mydraw.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="Hbo3FVHc3uWv" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" text="public AbstractLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="3Zzq3tNN46jO" id="3Zzq3tNN46jO" fileName="MyPicture" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;mypicture.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="SAXd5obBLLzJ" id="SAXd5obBLLzJ" fileName="MyMenu" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;mymenu.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="SrOX1c3NjkmT" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" text="public AbstractOperation ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="kzMqHVGW7DUt" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" text="public AbstractOperation ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="ljrPgaa6k6jp" id="ljrPgaa6k6jp" fileName="MyToolbar" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;mytoolbar.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="aeEUhM2Edk6O" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" text="public AbstractOperation ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="S8wq0sSOwu9a" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" text="public AbstractOperation ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="bwZnciy8yVCM" id="bwZnciy8yVCM" fileName="Model" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;model.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="jnqGRL62Hfnt" id="jnqGRL62Hfnt" fileName="Model2" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;model2.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="5W3SO2Ouq22G" id="5W3SO2Ouq22G" fileName="Vector" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;vector.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="oQQ57r2VmbBV" id="oQQ57r2VmbBV" fileName="QVector" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qvector.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="jDMpz4su6qwS" id="jDMpz4su6qwS" fileName="QMenuBar" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qmenubar.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="LDPmZnkxqrAz" id="LDPmZnkxqrAz" fileName="QGraphicsView" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qgraphicsview.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="96bzvjwdOMh5" id="96bzvjwdOMh5" fileName="QGridLayout" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qgridlayout.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="kOV7kAACioLt" id="kOV7kAACioLt" fileName="QGraphicsScene" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;qgraphicsscene.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="Rvnpg6II1DFm" id="Rvnpg6II1DFm" fileName="AbstractLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;abstractlayer.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyDraw item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyDraw>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_5" accessType="0" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="1" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="2" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="3" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;CompositeLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;CompositeLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="4" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="Hbo3FVHc3uWv" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" text="public MyDraw ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyDraw item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyDraw>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="Hbo3FVHc3uWv" writeOutText="false" classfield_id="Hbo3FVHc3uWv" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="IEa4jV9GF1CQ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" text="public CompositeLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_5" accessType="0" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="1" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="2" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="3" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;CompositeLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;CompositeLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="4" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="mR4N8s4eWtcU" id="mR4N8s4eWtcU" fileName="Layer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;layer.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="MxZIrc8AMEIb" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" text="public AbstractOperation ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="otTFzWouU7wF" id="otTFzWouU7wF" fileName="CompositeLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;compositelayer.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="IEa4jV9GF1CQ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" text="public AbstractLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="IEa4jV9GF1CQ" writeOutText="false" classfield_id="IEa4jV9GF1CQ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="wnx9di2WWnY9" id="wnx9di2WWnY9" fileName="AbstractOperation" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;abstractoperation.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_5" accessType="0" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="1" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="2" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="3" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="4" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="0" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_11" accessType="1" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_12" accessType="2" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_13" accessType="3" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;Layer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;Layer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_14" accessType="4" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_15" accessType="0" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_16" accessType="1" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_17" accessType="2" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_18" accessType="3" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_19" accessType="4" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_20" accessType="0" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_21" accessType="1" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_22" accessType="2" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_23" accessType="3" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_24" accessType="4" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="SrOX1c3NjkmT" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" text="public MyMenu ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="SrOX1c3NjkmT" writeOutText="false" classfield_id="SrOX1c3NjkmT" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="aeEUhM2Edk6O" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" text="public MyToolbar ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_5" accessType="0" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="1" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="2" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="3" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="4" parent_id="aeEUhM2Edk6O" writeOutText="false" classfield_id="aeEUhM2Edk6O" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="MxZIrc8AMEIb" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" text="public Layer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="0" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_11" accessType="1" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_12" accessType="2" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_13" accessType="3" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;Layer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;Layer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_14" accessType="4" parent_id="MxZIrc8AMEIb" writeOutText="false" classfield_id="MxZIrc8AMEIb" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="kzMqHVGW7DUt" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" text="public MyMenu ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_15" accessType="0" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_16" accessType="1" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_17" accessType="2" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_18" accessType="3" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_19" accessType="4" parent_id="kzMqHVGW7DUt" writeOutText="false" classfield_id="kzMqHVGW7DUt" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="S8wq0sSOwu9a" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" text="public MyToolbar ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_20" accessType="0" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_21" accessType="1" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_22" accessType="2" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_23" accessType="3" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_24" accessType="4" parent_id="S8wq0sSOwu9a" writeOutText="false" classfield_id="S8wq0sSOwu9a" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="RrpInRDMtj6D" id="RrpInRDMtj6D" fileName="OperationA" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;operationa.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="fNptufdwNwwD" id="fNptufdwNwwD" fileName="OperationB" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;operationb.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="3XyTzOQmgoSY" id="cppheader3XyTzOQmgoSY" fileName="AbstractALLApplication" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ABSTRACTALLAPPLICATION_H&amp;#010;#define ABSTRACTALLAPPLICATION_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="3XyTzOQmgoSY" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Interface AbstractALLApplication&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="AbstractALLApplication () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ABSTRACTALLAPPLICATION_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="hxZCibvj8rD6" id="cppheaderhxZCibvj8rD6" fileName="MyWindow" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MYWINDOW_H&amp;#010;#define MYWINDOW_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;abstractallapplication.h&quot;&amp;#010;#include &quot;abstractdrawpicture.h&quot;&amp;#010;#include &quot;abstractmenu.h&quot;&amp;#010;#include &quot;abstracttoolbar.h&quot;&amp;#010;#include &quot;.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="hxZCibvj8rD6" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class MyWindow&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" text=" AbstractDrawPicture ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="1" tag="_0" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" text=" AbstractToolbar ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="1" tag="_1" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" text=" AbstractMenu ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="0" tag="_2" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" text=" AbstractDrawPicture ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="0" tag="_3" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" text=" AbstractMenu ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="0" tag="_4" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" text=" AbstractToolbar ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="0" tag="_5" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" text=" AbstractDrawPicture ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="0" tag="_6" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" text=" AbstractMenu ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="0" tag="_7" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" text=" AbstractToolbar ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="MyWindow () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="BG5V465ztFZ1" indentLevel="1" classfield_id="BG5V465ztFZ1" text="return menuList;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_18" accessType="1" parent_id="BG5V465ztFZ1" indentLevel="1" classfield_id="BG5V465ztFZ1" text="menuList = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_19" accessType="0" parent_id="DGMOXwwrtP0q" indentLevel="1" classfield_id="DGMOXwwrtP0q" text="return toolBarList;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_20" accessType="1" parent_id="DGMOXwwrtP0q" indentLevel="1" classfield_id="DGMOXwwrtP0q" text="toolBarList = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="JvbNUsBoRv26" indentLevel="1" classfield_id="JvbNUsBoRv26" text="return drawPictureList;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="JvbNUsBoRv26" indentLevel="1" classfield_id="JvbNUsBoRv26" text="drawPictureList = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_23" accessType="0" parent_id="10v7fMFJoZR1" indentLevel="1" classfield_id="10v7fMFJoZR1" text="return menuBar;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_24" accessType="1" parent_id="10v7fMFJoZR1" indentLevel="1" classfield_id="10v7fMFJoZR1" text="menuBar = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_25" accessType="0" parent_id="YlUhZ3j6m4oL" indentLevel="1" classfield_id="YlUhZ3j6m4oL" text="return w_win;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_26" accessType="1" parent_id="YlUhZ3j6m4oL" indentLevel="1" classfield_id="YlUhZ3j6m4oL" text="w_win = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="NUYGSqtxxrLQ" indentLevel="1" classfield_id="NUYGSqtxxrLQ" text="return h_win;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="NUYGSqtxxrLQ" indentLevel="1" classfield_id="NUYGSqtxxrLQ" text="h_win = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_29" accessType="0" parent_id="6YRoAhuhTOO0" indentLevel="1" classfield_id="6YRoAhuhTOO0" text="return x_win;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_30" accessType="1" parent_id="6YRoAhuhTOO0" indentLevel="1" classfield_id="6YRoAhuhTOO0" text="x_win = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_31" accessType="0" parent_id="Q56C9sXUM3ip" indentLevel="1" classfield_id="Q56C9sXUM3ip" text="return y_win;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_32" accessType="1" parent_id="Q56C9sXUM3ip" indentLevel="1" classfield_id="Q56C9sXUM3ip" text="y_win = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_33" accessType="0" parent_id="tZkqQ5FWbeIk" indentLevel="1" classfield_id="tZkqQ5FWbeIk" text="return viewGraphic;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_34" accessType="1" parent_id="tZkqQ5FWbeIk" indentLevel="1" classfield_id="tZkqQ5FWbeIk" text="viewGraphic = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_35" accessType="0" parent_id="gecFGvzb6OMd" indentLevel="1" classfield_id="gecFGvzb6OMd" text="return layoutGrid;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_36" accessType="1" parent_id="gecFGvzb6OMd" indentLevel="1" classfield_id="gecFGvzb6OMd" text="layoutGrid = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_37" accessType="0" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_38" accessType="1" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_39" accessType="2" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_40" accessType="3" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractDrawPicture item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractDrawPicture>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_41" accessType="4" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_42" accessType="0" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_43" accessType="1" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_44" accessType="2" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_45" accessType="3" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_46" accessType="4" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_47" accessType="0" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_48" accessType="1" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_49" accessType="2" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_50" accessType="3" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_51" accessType="4" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_52" accessType="0" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_53" accessType="1" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_54" accessType="2" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_55" accessType="3" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractDrawPicture item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractDrawPicture>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_56" accessType="4" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_57" accessType="0" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_58" accessType="1" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_59" accessType="2" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_60" accessType="3" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_61" accessType="4" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_62" accessType="0" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_63" accessType="1" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_64" accessType="2" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_65" accessType="3" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_66" accessType="4" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_67" accessType="0" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_68" accessType="1" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_69" accessType="2" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_70" accessType="3" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractDrawPicture item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractDrawPicture>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_71" accessType="4" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_72" accessType="0" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_73" accessType="1" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_74" accessType="2" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_75" accessType="3" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_76" accessType="4" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_77" accessType="0" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_78" accessType="1" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_79" accessType="2" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_80" accessType="3" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_81" accessType="4" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="_8" parent_id="BG5V465ztFZ1" indentLevel="1" text=" QVector&lt;AbstractMenu*> menuList;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_9" parent_id="DGMOXwwrtP0q" indentLevel="1" text=" QVector&lt;AbstractToolbar*> toolBarList;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_10" parent_id="JvbNUsBoRv26" indentLevel="1" text=" QVector&lt;AbstractDrawPicture*> drawPictureList;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_11" parent_id="10v7fMFJoZR1" indentLevel="1" text=" QMenuBar* menuBar;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_12" parent_id="YlUhZ3j6m4oL" indentLevel="1" text=" int w_win;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_13" parent_id="NUYGSqtxxrLQ" indentLevel="1" text=" int h_win;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_14" parent_id="6YRoAhuhTOO0" indentLevel="1" text=" int x_win;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_15" parent_id="Q56C9sXUM3ip" indentLevel="1" text=" int y_win;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_16" parent_id="tZkqQ5FWbeIk" indentLevel="1" text=" QGraphicsView* viewGraphic;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock tag="_17" parent_id="gecFGvzb6OMd" indentLevel="1" text=" QGridLayout* layoutGrid;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MYWINDOW_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="BG5V465ztFZ1" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_8" parent_id="BG5V465ztFZ1" indentLevel="1" text=" QVector&lt;AbstractMenu*> menuList;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="BG5V465ztFZ1" indentLevel="1" classfield_id="BG5V465ztFZ1" text="return menuList;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_18" accessType="1" parent_id="BG5V465ztFZ1" indentLevel="1" classfield_id="BG5V465ztFZ1" text="menuList = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="DGMOXwwrtP0q" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_9" parent_id="DGMOXwwrtP0q" indentLevel="1" text=" QVector&lt;AbstractToolbar*> toolBarList;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_19" accessType="0" parent_id="DGMOXwwrtP0q" indentLevel="1" classfield_id="DGMOXwwrtP0q" text="return toolBarList;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_20" accessType="1" parent_id="DGMOXwwrtP0q" indentLevel="1" classfield_id="DGMOXwwrtP0q" text="toolBarList = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="JvbNUsBoRv26" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_10" parent_id="JvbNUsBoRv26" indentLevel="1" text=" QVector&lt;AbstractDrawPicture*> drawPictureList;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_21" accessType="0" parent_id="JvbNUsBoRv26" indentLevel="1" classfield_id="JvbNUsBoRv26" text="return drawPictureList;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_22" accessType="1" parent_id="JvbNUsBoRv26" indentLevel="1" classfield_id="JvbNUsBoRv26" text="drawPictureList = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="10v7fMFJoZR1" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_11" parent_id="10v7fMFJoZR1" indentLevel="1" text=" QMenuBar* menuBar;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_23" accessType="0" parent_id="10v7fMFJoZR1" indentLevel="1" classfield_id="10v7fMFJoZR1" text="return menuBar;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_24" accessType="1" parent_id="10v7fMFJoZR1" indentLevel="1" classfield_id="10v7fMFJoZR1" text="menuBar = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="YlUhZ3j6m4oL" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_12" parent_id="YlUhZ3j6m4oL" indentLevel="1" text=" int w_win;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_25" accessType="0" parent_id="YlUhZ3j6m4oL" indentLevel="1" classfield_id="YlUhZ3j6m4oL" text="return w_win;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_26" accessType="1" parent_id="YlUhZ3j6m4oL" indentLevel="1" classfield_id="YlUhZ3j6m4oL" text="w_win = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="NUYGSqtxxrLQ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_13" parent_id="NUYGSqtxxrLQ" indentLevel="1" text=" int h_win;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_27" accessType="0" parent_id="NUYGSqtxxrLQ" indentLevel="1" classfield_id="NUYGSqtxxrLQ" text="return h_win;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_28" accessType="1" parent_id="NUYGSqtxxrLQ" indentLevel="1" classfield_id="NUYGSqtxxrLQ" text="h_win = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="6YRoAhuhTOO0" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_14" parent_id="6YRoAhuhTOO0" indentLevel="1" text=" int x_win;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_29" accessType="0" parent_id="6YRoAhuhTOO0" indentLevel="1" classfield_id="6YRoAhuhTOO0" text="return x_win;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_30" accessType="1" parent_id="6YRoAhuhTOO0" indentLevel="1" classfield_id="6YRoAhuhTOO0" text="x_win = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="Q56C9sXUM3ip" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_15" parent_id="Q56C9sXUM3ip" indentLevel="1" text=" int y_win;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_31" accessType="0" parent_id="Q56C9sXUM3ip" indentLevel="1" classfield_id="Q56C9sXUM3ip" text="return y_win;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_32" accessType="1" parent_id="Q56C9sXUM3ip" indentLevel="1" classfield_id="Q56C9sXUM3ip" text="y_win = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="tZkqQ5FWbeIk" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_16" parent_id="tZkqQ5FWbeIk" indentLevel="1" text=" QGraphicsView* viewGraphic;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_33" accessType="0" parent_id="tZkqQ5FWbeIk" indentLevel="1" classfield_id="tZkqQ5FWbeIk" text="return viewGraphic;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_34" accessType="1" parent_id="tZkqQ5FWbeIk" indentLevel="1" classfield_id="tZkqQ5FWbeIk" text="viewGraphic = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="gecFGvzb6OMd" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_17" parent_id="gecFGvzb6OMd" indentLevel="1" text=" QGridLayout* layoutGrid;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_35" accessType="0" parent_id="gecFGvzb6OMd" indentLevel="1" classfield_id="gecFGvzb6OMd" text="return layoutGrid;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_36" accessType="1" parent_id="gecFGvzb6OMd" indentLevel="1" classfield_id="gecFGvzb6OMd" text="layoutGrid = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="9jTAQQfSJyb3" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" text=" AbstractDrawPicture ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_37" accessType="0" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_38" accessType="1" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_39" accessType="2" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_40" accessType="3" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractDrawPicture item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractDrawPicture>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_41" accessType="4" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="Kl5dheg0bVOI" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="_0" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" text=" AbstractToolbar ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_42" accessType="0" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_43" accessType="1" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_44" accessType="2" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_45" accessType="3" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_46" accessType="4" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="NV1yzNHNgZ9j" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="_1" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" text=" AbstractMenu ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_47" accessType="0" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_48" accessType="1" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_49" accessType="2" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_50" accessType="3" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_51" accessType="4" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="KKP1rYkBJ3BZ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="_2" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" text=" AbstractDrawPicture ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_52" accessType="0" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_53" accessType="1" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_54" accessType="2" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_55" accessType="3" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractDrawPicture item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractDrawPicture>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_56" accessType="4" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="aLIsORRACBix" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="_3" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" text=" AbstractMenu ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_57" accessType="0" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_58" accessType="1" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_59" accessType="2" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_60" accessType="3" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_61" accessType="4" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="sRR5a72lvP0g" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="_4" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" text=" AbstractToolbar ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_62" accessType="0" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_63" accessType="1" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_64" accessType="2" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_65" accessType="3" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_66" accessType="4" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="bJpXgpBom6zd" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="_5" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" text=" AbstractDrawPicture ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_67" accessType="0" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_68" accessType="1" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_69" accessType="2" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_70" accessType="3" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractDrawPicture item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractDrawPicture>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_71" accessType="4" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="NccAgZna16lv" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="_6" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" text=" AbstractMenu ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_72" accessType="0" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_73" accessType="1" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_74" accessType="2" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_75" accessType="3" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_76" accessType="4" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="vWwwahrjZeqb" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="_7" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" text=" AbstractToolbar ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_77" accessType="0" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_78" accessType="1" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_79" accessType="2" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_80" accessType="3" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_81" accessType="4" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="JA5HC0BWGg2W" id="cppheaderJA5HC0BWGg2W" fileName="AbstractDrawPicture" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ABSTRACTDRAWPICTURE_H&amp;#010;#define ABSTRACTDRAWPICTURE_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;abstractallapplication.h&quot;&amp;#010;#include &quot;mywindow.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="JA5HC0BWGg2W" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class AbstractDrawPicture&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="1" tag="_0" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="1" tag="_1" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="AbstractDrawPicture () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="l2WpOqSWx1Ts" indentLevel="1" classfield_id="l2WpOqSWx1Ts" text="return sceneGraphic;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="l2WpOqSWx1Ts" indentLevel="1" classfield_id="l2WpOqSWx1Ts" text="sceneGraphic = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="0" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="1" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="2" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="3" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="4" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="0" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="1" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_11" accessType="2" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_12" accessType="3" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_13" accessType="4" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_14" accessType="0" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_15" accessType="1" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_16" accessType="2" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_17" accessType="3" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_18" accessType="4" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock tag="_2" parent_id="l2WpOqSWx1Ts" indentLevel="1" text=" QGraphicsScene * sceneGraphic;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ABSTRACTDRAWPICTURE_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="-1" listClassName="" field_type="0" parent_id="l2WpOqSWx1Ts" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock tag="_2" parent_id="l2WpOqSWx1Ts" indentLevel="1" text=" QGraphicsScene * sceneGraphic;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod tag="hblock_tag_0" accessType="0" parent_id="l2WpOqSWx1Ts" indentLevel="1" classfield_id="l2WpOqSWx1Ts" text="return sceneGraphic;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod tag="hblock_tag_3" accessType="1" parent_id="l2WpOqSWx1Ts" indentLevel="1" classfield_id="l2WpOqSWx1Ts" text="sceneGraphic = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="9jTAQQfSJyb3" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="0" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="1" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="2" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="3" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="4" parent_id="9jTAQQfSJyb3" writeOutText="false" indentLevel="1" classfield_id="9jTAQQfSJyb3" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="KKP1rYkBJ3BZ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="_0" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="0" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="1" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_11" accessType="2" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_12" accessType="3" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_13" accessType="4" parent_id="KKP1rYkBJ3BZ" writeOutText="false" indentLevel="1" classfield_id="KKP1rYkBJ3BZ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="bJpXgpBom6zd" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="_1" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_14" accessType="0" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_15" accessType="1" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_16" accessType="2" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_17" accessType="3" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_18" accessType="4" parent_id="bJpXgpBom6zd" writeOutText="false" indentLevel="1" classfield_id="bJpXgpBom6zd" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="Y8MP4pfNzifB" id="cppheaderY8MP4pfNzifB" fileName="AbstractMenu" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ABSTRACTMENU_H&amp;#010;#define ABSTRACTMENU_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;abstractallapplication.h&quot;&amp;#010;#include &quot;mywindow.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="Y8MP4pfNzifB" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class AbstractMenu&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="1" tag="_0" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="1" tag="_1" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="AbstractMenu () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="1" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="2" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="3" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="4" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="0" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="1" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="2" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="3" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="4" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_11" accessType="0" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_12" accessType="1" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_13" accessType="2" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_14" accessType="3" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_15" accessType="4" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ABSTRACTMENU_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="NV1yzNHNgZ9j" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="1" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="2" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="3" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="4" parent_id="NV1yzNHNgZ9j" writeOutText="false" indentLevel="1" classfield_id="NV1yzNHNgZ9j" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="aLIsORRACBix" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="_0" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="0" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="1" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="2" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="3" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="4" parent_id="aLIsORRACBix" writeOutText="false" indentLevel="1" classfield_id="aLIsORRACBix" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="NccAgZna16lv" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="_1" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_11" accessType="0" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_12" accessType="1" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_13" accessType="2" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_14" accessType="3" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_15" accessType="4" parent_id="NccAgZna16lv" writeOutText="false" indentLevel="1" classfield_id="NccAgZna16lv" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="SkFKQ81wGLLJ" id="cppheaderSkFKQ81wGLLJ" fileName="AbstractToolbar" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ABSTRACTTOOLBAR_H&amp;#010;#define ABSTRACTTOOLBAR_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;abstractallapplication.h&quot;&amp;#010;#include &quot;mywindow.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="SkFKQ81wGLLJ" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class AbstractToolbar&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="1" tag="_0" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="1" tag="_1" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="AbstractToolbar () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="1" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="2" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="3" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="4" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="0" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="1" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="2" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="3" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="4" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_11" accessType="0" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_12" accessType="1" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_13" accessType="2" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_14" accessType="3" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_15" accessType="4" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ABSTRACTTOOLBAR_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="Kl5dheg0bVOI" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="1" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="2" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="3" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="4" parent_id="Kl5dheg0bVOI" writeOutText="false" indentLevel="1" classfield_id="Kl5dheg0bVOI" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="sRR5a72lvP0g" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="_0" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="0" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="1" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="2" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="3" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="4" parent_id="sRR5a72lvP0g" writeOutText="false" indentLevel="1" classfield_id="sRR5a72lvP0g" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="vWwwahrjZeqb" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="_1" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" text=" MyWindow ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_11" accessType="0" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_12" accessType="1" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_13" accessType="2" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_14" accessType="3" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyWindow item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyWindow>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_15" accessType="4" parent_id="vWwwahrjZeqb" writeOutText="false" indentLevel="1" classfield_id="vWwwahrjZeqb" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="KDkOMwmmk6AB" id="cppheaderKDkOMwmmk6AB" fileName="MyDraw" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MYDRAW_H&amp;#010;#define MYDRAW_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;abstractdrawpicture.h&quot;&amp;#010;#include &quot;model.h&quot;&amp;#010;#include &quot;abstractlayer.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="KDkOMwmmk6AB" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class MyDraw&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" text=" AbstractLayer ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="MyDraw () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MYDRAW_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="Hbo3FVHc3uWv" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" text=" AbstractLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="3Zzq3tNN46jO" id="cppheader3Zzq3tNN46jO" fileName="MyPicture" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MYPICTURE_H&amp;#010;#define MYPICTURE_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;abstractdrawpicture.h&quot;&amp;#010;#include &quot;model2.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="3Zzq3tNN46jO" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class MyPicture&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="MyPicture () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MYPICTURE_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="SAXd5obBLLzJ" id="cppheaderSAXd5obBLLzJ" fileName="MyMenu" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MYMENU_H&amp;#010;#define MYMENU_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;abstractmenu.h&quot;&amp;#010;#include &quot;abstractoperation.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="SAXd5obBLLzJ" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class MyMenu&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" text=" AbstractOperation ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="0" tag="_0" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" text=" AbstractOperation ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="MyMenu () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MYMENU_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="SrOX1c3NjkmT" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" text=" AbstractOperation ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="kzMqHVGW7DUt" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="_0" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" text=" AbstractOperation ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="ljrPgaa6k6jp" id="cppheaderljrPgaa6k6jp" fileName="MyToolbar" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MYTOOLBAR_H&amp;#010;#define MYTOOLBAR_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;abstracttoolbar.h&quot;&amp;#010;#include &quot;abstractoperation.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="ljrPgaa6k6jp" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class MyToolbar&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" text=" AbstractOperation ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="0" tag="_0" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" text=" AbstractOperation ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="MyToolbar () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MYTOOLBAR_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="aeEUhM2Edk6O" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" text=" AbstractOperation ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="S8wq0sSOwu9a" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="_0" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" text=" AbstractOperation ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="bwZnciy8yVCM" id="cppheaderbwZnciy8yVCM" fileName="Model" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MODEL_H&amp;#010;#define MODEL_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="bwZnciy8yVCM" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class Model&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="Model () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MODEL_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="jnqGRL62Hfnt" id="cppheaderjnqGRL62Hfnt" fileName="Model2" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MODEL2_H&amp;#010;#define MODEL2_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="jnqGRL62Hfnt" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class Model2&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="Model2 () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MODEL2_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="5W3SO2Ouq22G" id="cppheader5W3SO2Ouq22G" fileName="Vector" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef VECTOR_H&amp;#010;#define VECTOR_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="5W3SO2Ouq22G" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class Vector&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="Vector () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //VECTOR_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="oQQ57r2VmbBV" id="cppheaderoQQ57r2VmbBV" fileName="QVector" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QVECTOR_H&amp;#010;#define QVECTOR_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="oQQ57r2VmbBV" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class QVector&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="QVector () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QVECTOR_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="jDMpz4su6qwS" id="cppheaderjDMpz4su6qwS" fileName="QMenuBar" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QMENUBAR_H&amp;#010;#define QMENUBAR_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="jDMpz4su6qwS" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class QMenuBar&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="QMenuBar () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QMENUBAR_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="LDPmZnkxqrAz" id="cppheaderLDPmZnkxqrAz" fileName="QGraphicsView" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QGRAPHICSVIEW_H&amp;#010;#define QGRAPHICSVIEW_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="LDPmZnkxqrAz" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class QGraphicsView&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="QGraphicsView () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QGRAPHICSVIEW_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="96bzvjwdOMh5" id="cppheader96bzvjwdOMh5" fileName="QGridLayout" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QGRIDLAYOUT_H&amp;#010;#define QGRIDLAYOUT_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="96bzvjwdOMh5" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class QGridLayout&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="QGridLayout () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QGRIDLAYOUT_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="kOV7kAACioLt" id="cppheaderkOV7kAACioLt" fileName="QGraphicsScene" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QGRAPHICSSCENE_H&amp;#010;#define QGRAPHICSSCENE_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="kOV7kAACioLt" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class QGraphicsScene&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="QGraphicsScene () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QGRAPHICSSCENE_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="Rvnpg6II1DFm" id="cppheaderRvnpg6II1DFm" fileName="AbstractLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ABSTRACTLAYER_H&amp;#010;#define ABSTRACTLAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="Rvnpg6II1DFm" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Interface AbstractLayer&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" text=" MyDraw ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="1" tag="_0" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" text=" CompositeLayer ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="AbstractLayer () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyDraw item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyDraw>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_5" accessType="0" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="1" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="2" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="3" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;CompositeLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;CompositeLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="4" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ABSTRACTLAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="Hbo3FVHc3uWv" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" text=" MyDraw ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyDraw item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyDraw>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="Hbo3FVHc3uWv" writeOutText="false" indentLevel="1" classfield_id="Hbo3FVHc3uWv" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="IEa4jV9GF1CQ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="_0" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" text=" CompositeLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_5" accessType="0" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="1" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="2" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="3" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;CompositeLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;CompositeLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="4" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="mR4N8s4eWtcU" id="cppheadermR4N8s4eWtcU" fileName="Layer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LAYER_H&amp;#010;#define LAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;abstractlayer.h&quot;&amp;#010;#include &quot;abstractoperation.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="mR4N8s4eWtcU" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class Layer&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" text=" AbstractOperation ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="Layer () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="3" parent_id="MxZIrc8AMEIb" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" text=" AbstractOperation ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractOperation item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractOperation>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="otTFzWouU7wF" id="cppheaderotTFzWouU7wF" fileName="CompositeLayer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef COMPOSITELAYER_H&amp;#010;#define COMPOSITELAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;abstractlayer.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="otTFzWouU7wF" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class CompositeLayer&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" text=" AbstractLayer ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="CompositeLayer () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //COMPOSITELAYER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="IEa4jV9GF1CQ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" text=" AbstractLayer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AbstractLayer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AbstractLayer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="IEa4jV9GF1CQ" writeOutText="false" indentLevel="1" classfield_id="IEa4jV9GF1CQ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="wnx9di2WWnY9" id="cppheaderwnx9di2WWnY9" fileName="AbstractOperation" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ABSTRACTOPERATION_H&amp;#010;#define ABSTRACTOPERATION_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="wnx9di2WWnY9" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Interface AbstractOperation&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" text=" MyMenu ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="1" tag="_0" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" text=" MyToolbar ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="1" tag="_1" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" text=" Layer ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="1" tag="_2" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" text=" MyMenu ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="1" tag="_3" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" text=" MyToolbar ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="AbstractOperation () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="1" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_5" accessType="2" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="3" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="4" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="0" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="1" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="2" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_11" accessType="3" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_12" accessType="4" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_13" accessType="0" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_14" accessType="1" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_15" accessType="2" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_16" accessType="3" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;Layer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;Layer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_17" accessType="4" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_18" accessType="0" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_19" accessType="1" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_20" accessType="2" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_21" accessType="3" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_22" accessType="4" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_23" accessType="0" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_24" accessType="1" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_25" accessType="2" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_26" accessType="3" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_27" accessType="4" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ABSTRACTOPERATION_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="SrOX1c3NjkmT" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" text=" MyMenu ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="1" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_5" accessType="2" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="3" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="4" parent_id="SrOX1c3NjkmT" writeOutText="false" indentLevel="1" classfield_id="SrOX1c3NjkmT" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="aeEUhM2Edk6O" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="_0" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" text=" MyToolbar ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="0" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="1" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="2" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_11" accessType="3" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_12" accessType="4" parent_id="aeEUhM2Edk6O" writeOutText="false" indentLevel="1" classfield_id="aeEUhM2Edk6O" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="MxZIrc8AMEIb" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="_1" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" text=" Layer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_13" accessType="0" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_14" accessType="1" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_15" accessType="2" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_16" accessType="3" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;Layer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;Layer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_17" accessType="4" parent_id="MxZIrc8AMEIb" writeOutText="false" indentLevel="1" classfield_id="MxZIrc8AMEIb" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="kzMqHVGW7DUt" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="_2" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" text=" MyMenu ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_18" accessType="0" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_19" accessType="1" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_20" accessType="2" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_21" accessType="3" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyMenu item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyMenu>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_22" accessType="4" parent_id="kzMqHVGW7DUt" writeOutText="false" indentLevel="1" classfield_id="kzMqHVGW7DUt" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="3" parent_id="S8wq0sSOwu9a" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="_3" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" text=" MyToolbar ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_23" accessType="0" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_24" accessType="1" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_25" accessType="2" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_26" accessType="3" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text="int size = %VARNAME%.size();&amp;#010;for (int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;MyToolbar item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;MyToolbar>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_27" accessType="4" parent_id="S8wq0sSOwu9a" writeOutText="false" indentLevel="1" classfield_id="S8wq0sSOwu9a" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="RrpInRDMtj6D" id="cppheaderRrpInRDMtj6D" fileName="OperationA" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OPERATIONA_H&amp;#010;#define OPERATIONA_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;abstractoperation.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="RrpInRDMtj6D" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class OperationA&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="OperationA () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OPERATIONA_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="fNptufdwNwwD" id="cppheaderfNptufdwNwwD" fileName="OperationB" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OPERATIONB_H&amp;#010;#define OPERATIONB_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;abstractoperation.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="fNptufdwNwwD" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class OperationB&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="OperationB () { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OPERATIONB_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
